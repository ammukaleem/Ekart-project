pipeline {
  agent any
  stages {
    stage('checkout scm') {
      steps {
        git branch: 'main', url: 'https://github.com/ammukaleem/Ekart-project'
      }
    }
    stage('Build') {
      steps {
        sh 'mvn clean install -DskipTests'

      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://192.168.56.11:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Docker Build') {
      steps {
        sh 'docker build -t ekart:${BUILD_NUMBER} .'
      }
    }
            
    stage('Docker Push') {
      steps {
        withCredentials([string(credentialsId: 'dockerhub-credentials', variable: 'DOCKERHUB_PASSWORD')]) {
          sh 'echo $DOCKERHUB_PASSWORD | docker login -u dockaleem --password-stdin'
          sh 'docker tag ekart:${BUILD_NUMBER} $DOCKER_USERNAME/ekart:${BUILD_NUMBER}'
          sh 'docker push dockaleem/ekart:${BUILD_NUMBER}'
        }
      }
    }
    stage('pull and deploy to k8s cluster') {
      steps {
        sh 'kubectl apply -f k8s/deployment.yaml'
        sh 'kubectl set image deployment/ekart ekart=ekart:${BUILD_NUMBER}'
        sh 'kubectl rollout status deployment/ekart'
      }
    }
  }
}

    
